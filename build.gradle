plugins {
    id 'java'
    id 'war'
    id 'com.github.ben-manes.versions' version '0.42.0'
//    id 'checkstyle'
    id 'com.github.spotbugs' version '4.7.3'
    id 'org.sonarqube' version '3.0'
}

sourceCompatibility = 17
targetCompatibility = 17

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]$qualifier[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'
    apply plugin: 'jacoco'
    apply plugin: 'org.sonarqube'

    group 'com.toptal'

    sourceCompatibility = 17
    targetCompatibility = 17

    compileJava {
        options.compilerArgs += ["-Amapstruct.unmappedTargetPolicy=ERROR"]
    }

    ext {
        aigxLoggingContextVersion = '1.0.2-RELEASE'
        springVersion = '6.0.2'
        springBootVersion = '3.0.0'
        springDataRedis = '3.1.2'
        ioLettuce = '6.2.3.RELEASE'
        springIntegrationVersion = '5.5.12'
        lombokVersion = '1.18.22'
        aclLibVersion = '1.8.0-RELEASE'
        jacksonVersion = '2.12.3'
        hibernateVersion = '6.1.5.Final'
        jakartaValidationVersion = '3.0.2'
        jwtVersion = '0.11.5'
        hibernateValidatorVersion = '8.0.0.Final'
        mySqlVersion = '8.0.28'
        javaxValidationApiVersion = '2.0.1.Final'
        apacheCommonsCollections4Version = '4.4'
        apacheCommonsLang3Version = '3.12.0'
        apacheCommonsVersion = '3.11'
        jacksonDatatypeJSR310Version = '2.11.1'
        javaFakerVersion = '1.0.2'
        assertJVersion = '3.16.1'
        jUnit5Version = '5.8.2'
        reflectionsVersion = '0.9.12'
        messageOrderJpaVersion = '1.0.3-RELEASE'
        hikariVersion = '3.4.5'
        mapstructVersion = '1.5.3.Final'
        postgresqlVersion = '42.6.0'
        lombokMapstructBindingVersion = '0.2.0'
        flywayVersion = '7.8.2'
        retrofitVersion = '2.9.0'
        springDocVersion = '1.5.8'
        micrometerRegistryPrometheusVersion = '1.6.6'
        queryDslVersion = '5.0.0'
        openCsvVersion = '5.6'
        javersVersion = '6.6.5'
        awaitilityVersion = '4.0.2'
        junitVersion = '4.13.1'
        guavaVersion = '30.1-jre'
        javaxElVersion = '3.0.1-b11'
        hibernateTypesVersion = '2.9.2'
        mockitoCoreVersion = '4.6.1'
        mockitoJunitJupiterVersion = '4.6.1'
        assertjCoreVersion = '3.18.1'
        okHttpVersion = '4.4.0'
        spotbugsVersion = '4.7.3'
        findsecbugsVersion = '1.12.0'
        findBugsVersion= '3.0.1'
        slf4japiVersion = '1.7.36'
        logBookVersion = '2.14.0'
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {

        compileOnly 'jakarta.platform:jakarta.jakartaee-web-api:9.0.0'
        compileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor group: 'org.mapstruct', name: 'mapstruct-processor', version: mapstructVersion
        annotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        annotationProcessor "org.projectlombok:lombok-mapstruct-binding:${lombokMapstructBindingVersion}"
        // Jackson
        implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: jacksonVersion

        implementation group: 'org.slf4j', name: 'slf4j-api', version: slf4japiVersion

        testCompileOnly group: 'org.projectlombok', name: 'lombok', version: lombokVersion
        testAnnotationProcessor group: 'org.projectlombok', name: 'lombok', version: lombokVersion

        testImplementation 'net.datafaker:datafaker:1.8.0'

        // Spotbugs
        implementation group: 'com.github.spotbugs', name: 'spotbugs', version: spotbugsVersion, ext: 'pom'
        implementation group: 'com.h3xstream.findsecbugs', name: 'findsecbugs-plugin', version: findsecbugsVersion

        //findbugs
        implementation group: 'com.google.code.findbugs', name: 'annotations', version: findBugsVersion
        implementation group: 'com.google.code.findbugs', name: 'jsr305', version: findBugsVersion
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
            exceptionFormat = 'full'
        }
        finalizedBy jacocoTestReport
    }

    jacocoTestReport {
        reports {
            xml.required
            html.required
        }
    }

    check {
        dependsOn jacocoTestCoverageVerification
    }

    spotbugsMain {
        reports {
            xml.enabled = true
        }
        excludeFilter = file("${project.rootDir}/config/spotbugs/main-exclude-filter.xml")
    }



}

sonarqube {
    properties {



        // Jacoco
        property "sonar.coverage.jacoco.xmlReportPaths", "${project.rootDir}/**/build/reports/jacoco/test/jacocoTestReport.xml"

        // Test coverage exclusions (Same as Jacoco)
        property "sonar.coverage.exclusions", "" +
                "*"+
                // Persistence
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/entities/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/configuration/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/enums/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/converters/identifier/impl/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/exceptions/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/repositories/custom/utils/**," +
                "adapters/persistence/jpa/src/main/java/com/toptal/quizhub/persistence/jpa/repositories/sort/**," +
                // Migrations
                "adapters/persistence/migrations/**," +
                // Rest
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/responses/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/requests/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/exceptions/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/constants/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/configurations/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/factories/*," +
                "adapters/rest-spring/src/main/java/com/toptal/quizhub/rest/dtos/*," +
                // App (Manly configurations so no really point in testing)
                "app/**," +
                // Mocks
                "http-mocks/**," +
                // Mocks
                "commons/**," +
                // Domain API and Catalog (interfaces and entities)
                "mdw/domain-api/**," +
                "mdw/domain-catalog/**," +
                "mdw/ports/**," +
                // Domain
                "mdw/domain-api/com/toptal/quizhub/domain/tasks/validations/errors/*," +
                "com/toptal/quizhub/domain/tasks/executions/AtomicTaskExecution/java"
    }
}
